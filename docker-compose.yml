version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: topar-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: topar_admin
      MONGO_INITDB_ROOT_PASSWORD: topar_password_2024
      MONGO_INITDB_DATABASE: topar_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      # - ./init-db.js:/docker-entrypoint-initdb.d/01-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - topar-network

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: topar-app
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3000
      # MongoDB connection
      MONGODB_URI: mongodb://topar_admin:topar_password_2024@mongodb:27017/topar_db?authSource=admin
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: topar_db
      MONGODB_USER: topar_admin
      MONGODB_PASSWORD: topar_password_2024
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      # For development: mount source code
      - ./src:/app/src
      - ./package.json:/app/package.json
    networks:
      - topar-network
    command: npm start

  # Development service (optional - use this for development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: topar-app-dev
    restart: unless-stopped
    ports:
      - "3002:3000"
      - "3003:3001"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://topar_admin:topar_password_2024@mongodb:27017/topar_db?authSource=admin
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: topar_db
      MONGODB_USER: topar_admin
      MONGODB_PASSWORD: topar_password_2024
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - /app/node_modules
    networks:
      - topar-network
    command: npm run dev
    profiles:
      - dev

  # Mongo Express (optional - for database management UI)
  mongo-express:
    image: mongo-express:latest
    container_name: topar-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: topar_admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: topar_password_2024
      ME_CONFIG_MONGODB_URL: mongodb://topar_admin:topar_password_2024@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - topar-network
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local

networks:
  topar-network:
    driver: bridge